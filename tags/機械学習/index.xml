<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>機械学習 on PPT Developers&#39; Blog</title>
    <link>https://persol-pt.github.io/tags/%E6%A9%9F%E6%A2%B0%E5%AD%A6%E7%BF%92/</link>
    <description>Recent content in 機械学習 on PPT Developers&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Fri, 02 Nov 2018 11:21:51 +0900</lastBuildDate>
    
	<atom:link href="https://persol-pt.github.io/tags/%E6%A9%9F%E6%A2%B0%E5%AD%A6%E7%BF%92/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>勉強会[GAN ～ガンだったりギャンだったり～]</title>
      <link>https://persol-pt.github.io/posts/tech-workshop_gan/</link>
      <pubDate>Fri, 02 Nov 2018 11:21:51 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/tech-workshop_gan/</guid>
      <description>皆さんこんにちは。
パーソルプロセス＆テクノロジー株式会社のyoshi-satoです。
今週もテクテクの勉強会の様子をお送りいたします。
よろしくお願いします。
※技術的なブログについてはQiitaでメンバーが各々に書き進めています。
こちらもぜひご覧ください。
Qiita - パーソルプロセス&amp;amp;テクノロジー
今週の発表者は、AI分野に詳しいテクテク部の桑田さんです。
テーマは「GAN ～ガンだったりギャンだったり～」でした。  
テーマ「GAN ～ガンだったりギャンだったり～」 GAN(Generative Adversarial Network)とは、ディープラーニングの仕組みで画像を生成するモデルです。
私自身AI系の技術には触れたことがなく、GANも今回の桑田さんの発表で初めて知った概念なので、追いかけるのが大変でした。
pix2pix はじめにGANを利用したアルゴリズムを紹介して頂きました。
一つ目は、pix2pixと呼ばれるもので、2つの画像のペア、たとえば白黒画像とカラー画像や、
線画と写真などを学習させると、自動的に画像の類似点を学習し、白黒画像→カラー画像や線画→写真など
任意の画像を変換した画像を生成することが出来るというものです。　 線画を猫のカラー画像に変換するデモページもあるそうですが、
 使い方を誤ると未来永劫拭い去ることの出来ないトラウマを植えつけられることになります。
vid2vid vid2vidは、上のpix2pixの動画版のようなもので、静止画ではなく動画を変換することが出来ます。
下の例のように、左のカラフルな人形が踊っている動画から、右の女性が踊っている動画に変換することが出来ます。
影まで付いていてリアルです。しかも動きます。
夢しかない。
 
GANって何？ ではGANとはいったいなんでしょう？
GANとは、データの分類を行う識別モデルとは異なり、データを生成する生成モデルと呼ばれるものの一種です。
Generative Adversarial Network（敵対生成ネットワーク）の名のとおり、敵対する2つのモデルを用いて学習を行います。
generatorと呼ばれるモデルと、discriminatorと呼ばれるモデルの2つに分かれており、generatorが乱数を元に生成した偽物の画像と、本物の画像をdiscriminatorに渡し、discriminatorがその画像が本物か偽物かを判断します。
これを繰り返して学習を行い、discriminatorが真贋判断できない画像を生成することがゴールとなります。
学習が成功すれば他の手法よりも鮮明な画像が生成できる一方、2つのモデルのうち片方だけが強くなってしまうなど
学習が不安定で、上手く学習させるためにはテクニックが必要になるそうです。
また、学習にコスト・時間がかかるというデメリットもあります。
NVIDIA Tesla V100を8機搭載しているDGX-1という機器（約1400万円!）の使用が推奨されており、それでも学習に数日かかることもあるそうです。
 
「ふと」 GANについての説明をして頂いたので、次にくるのは十中八九「GANやってみた」的なスライドだと会議室の誰もが思ったでしょう(たぶん) 。
 「GANを利用しない場合どういった結果になるのか」
GANを語った上で、GANを使わないという私のような素人の目には暴挙とも映る検証を行います。
 検証内容としては、GANを使ってアニメ「キルミーベイベー」のキャラクターを生成する記事を、GANを使用しない3つの方法で再現するという内容です。
方法① 逆畳み込み 大きなイメージから特徴を抽出しつつ小さなイメージに縮小していく畳み込みと呼ばれるアルゴリズムとは逆に、
小さなイメージを拡大してから畳み込むという方式です。
 方法② 単純パーセプトロン 入力に対して重み付けを行い、それらの合計が閾値を超えるか超えないかを判断するアルゴリズムです。</description>
    </item>
    
    <item>
      <title>勉強会[物体検出アルゴリズム YOLO]</title>
      <link>https://persol-pt.github.io/posts/tech-workshop20180420/</link>
      <pubDate>Wed, 09 May 2018 14:49:20 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/tech-workshop20180420/</guid>
      <description>みなさんこんにちは、
パーソルプロセスアンドテクノロジー株式会社のEP統括部、daitasuです。
今週も私たちの部の勉強会の様子をお送りいたします。
※技術的なブログについてはQiitaでメンバーが各々に書き進めています。
こちらもぜひご覧ください。
Qiita - パーソルプロセス&amp;amp;テクノロジー
さて、今週の発表者は私の直属のMGRであります、川崎さんのプレゼンです。
テーマは「YOLOってみた」です。
テーマ「YOLOってみた」   
みなさん、YOLOってご存知でしょうか？
私は今回初めて知ったのですが、YOLOというのは、
&amp;lsquo;You only look once&amp;rsquo;、
リアルタイムに画像認識を行い、物体を検出するアルゴリズムを指します。
川崎さんは、今回自宅の動画を撮影し、このYOLOを利用して、
物体検出がどのくらいの制度か、どのくらいの変換速度なのかを検証したお話を
してくださいました。
そもそもYOLOってどんなもの？ 
  
上記のように、YOLOはDarknetというフレームワークを用いて
画像/動画からオブジェクトを検出しています。
そして、そのオブジェクトが何なのか(人なのか、車なのか、植物なのか等)を
判断し、分類をリアルタイムに行っています。
実際の画像を見てみましょう！
  
「Person」と「laptop」が検出されていますね。
このように、画像/動画から物体検出し、分類した結果を枠で囲い伝えてくれます。
川崎さんが撮影した自宅の動画では、人や植物、机、TVなど
想像以上に細かに分類がなされていました。
以下のサイトなどを見て頂けると、
YOLOの面白さが伝わるのではないかと思います。
YOLO動画 検証環境 
  検証した環境     用意するもの   
YOLOはCPU単体だと非常に動きが悪くなるようで、GPUを積んだマシンで行う必要があります
今回の検証では、CPU単体での処理と、
GPUを利用した場合の2種類のプログラムで検証しています。
検証結果   検証結果   CPU単体だと速度が全く出ず、
動画でもすごく遅いGIF画像を見ているような動きになっていました。</description>
    </item>
    
    <item>
      <title>勉強会[Anacondaでのデータ前処理]</title>
      <link>https://persol-pt.github.io/posts/tech-workshop20180329/</link>
      <pubDate>Fri, 06 Apr 2018 14:11:16 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/tech-workshop20180329/</guid>
      <description>みなさんこんにちは、
パーソルプロセスアンドテクノロジー株式会社のEP統括部、daitasuです。
今週も私たちの部の勉強会の様子をお送りいたします。
※技術的なブログについてはQiitaでメンバーが各々に書き進めています。
こちらもぜひご覧ください。
Qiita - パーソルプロセス&amp;amp;テクノロジー
さて、今週の発表者はデータ分析案件に携わっている桑田さん。
テーマは「Anacondaでのデータ前処理」でした。
2018年3月15日の勉強会　 テーマ「Anacondaでのデータ前処理」   
桑田さんは現在データ分析関連の業務に携わっており、
大学時代から研究で機械学習を使ったテーマに関わっていたそうです。
そんな桑田さんですが、今週は自身の現在の分析環境の紹介、
特にAnacondaを用いた機械学習実行環境の準備からデータ前処理を行うまでをご説明頂きました。
Anacondaとは 
Anaconda はデータサイエンス向けに作成された Pythonパッケージで、
科学技術計算などを中心とした数多くのモジュールやツールが独自の形式で同梱されているもの。
機械学習屋さんが取り扱う基本的なものは一通り揃っているようです。
  Anaconda全体像     よく出てくるデータ解析ライブラリ   
Anacondaを用いることで、通常はPythonのインストール後に行う必要なライブラリの追加を省くことができます。
一方で、従来のPython環境が隠ぺいされるために独自の環境を利用するためには、
諸々の設定を行わないといけない点もあるため、メリット/デメリットを踏まえたうえで使う必要がありそうです。
今回の話では、Anacondaを使ったデータ前処理の方法として、
その中のライブラリ、PandasとJupyterLabを使ったやり方をご説明頂きました。
Pandasとは 
* 数値計算ライブラリ(NumPy) * 数値解析ライブラリ(SciPy) * グラフ描画ライブラリ(matplotlib)

を含むデータ解析支援ライブラリ。 データフレームオブジェクトという物を使って、データ操作のための効率的な演算を提供しており、
テーブルデータや時系列データ解析などを得意としているようです。
Jupyterシリーズとは 
Jupyterシリーズ(JupyterLabやJupyter Notebook)は、
プログラムのコードを含んだドキュメントを作成できる、OSSのウェブアプリケーションです。
スクリプトをファイル単位ではなくセル単位で記述することができ、
一緒にマークダウンも書くことができるため、
内容説明 + コード + 結果がまとめて書くことができるのが使い勝手が良いため、
利用しているデータサイエンティストは多いんだとか。</description>
    </item>
    
    <item>
      <title>Dialogflow &#43; VoiceTextで音声会話Botをさくっと作ろう</title>
      <link>https://persol-pt.github.io/posts/audio-conversation-bot/</link>
      <pubDate>Thu, 14 Dec 2017 00:19:21 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/audio-conversation-bot/</guid>
      <description>dialogflow + VoiceTextでさくっと音声会話botを作ろう
 どうもこんにちは、藤井です。
今回は新卒ながら自分もAdvent Calenderの記事投稿に加わらせて頂きました。
この記事は、新卒専用 Advent Calendar 2017 19日目の記事になります。
本記事では、dialogflowを用いて簡単にチャットボットを作り、そこにVoiceTextを足し合わせた音声会話Botの作り方をお伝えしたいと思います。

今回作るものの概要 
完成品 
何はともあれ実物を見てみましょう。今回作成した音声会話Botはこちらです。↓↓↓

Dialogflow + VoiceTextで音声チャットボットを作ってみた(youtube)

① この動画のような感じでBotとの音声を文字列に変換しBotが認識
② AIが反応し対応する言葉を返答
③ テキストと同時に、音声にも変換して返事を返す

今回は相手役としてカワウソちゃんとおしゃべりできるようにしようと思います！

仕組み 
流れ図としては以下のようになります。
 音声会話Botの概要   使った技術 
今回使った技術は以下の通りです。
 Node.js &amp;hellip; サーバサイドのJavascriptランタイム環境。フレームワークにはexpressを用い、テンプレートエンジンとしてejsを使用しました。
 VoiceText(Node.js SDK) &amp;hellip; HOYA株式会社さんの音声合成ソフトウェア。流暢な発声と感情表現できるのが特徴です。
 Dialogflow &amp;hellip; 自然言語対話のAIを簡単に作れるプラットフォームです。さくっとBotを作るのに向いています。
  作成の流れ 
では実際に作成していきましょう。
Dialogflow 
まずはDialogflowで対話するAIBotを作っていきます。
Dialogflowにログインし、「Create new agent」で新しいエージェントを作成します。
 Entity</description>
    </item>
    
  </channel>
</rss>