<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>勉強会 on PPT Developers&#39; Blog</title>
    <link>https://persol-pt.github.io/tags/%E5%8B%89%E5%BC%B7%E4%BC%9A/</link>
    <description>Recent content in 勉強会 on PPT Developers&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Wed, 31 Jan 2018 13:38:55 +0900</lastBuildDate>
    
	<atom:link href="https://persol-pt.github.io/tags/%E5%8B%89%E5%BC%B7%E4%BC%9A/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>てくてく勉強会1月24日</title>
      <link>https://persol-pt.github.io/posts/tech-workshop20180131/</link>
      <pubDate>Wed, 31 Jan 2018 13:38:55 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/tech-workshop20180131/</guid>
      <description> 
みなさんこんにちは、パーソルプロセスアンドテクノロジー株式会社のAS統括部、daitasuです。
今週も私たち、テクテクチームの毎週の勉強会の様子を発信していきます！
技術的なブログについては現在QiitaのOrganizationに移行しております。
テクテクチームのメンバーが各々に書き進めていますのでこちらもぜひご覧ください。
Qiita - パーソルプロセス&amp;amp;テクノロジー

さて、今週の発表者は毎週このブログをお届けしております、私、藤井 大祐(daitasu)です。
テーマは 「WebRTCコトハジメ」 。
Web RTCを始めるにあたっての基礎知識・導入を発表しました。 2018年1月22日の勉強会　 テーマ「Web RTC コトハジメ」 
  
本発表では、Web RTCの基本的な内容について、
実際にP2P通信を行うまでについての説明と実際のDEMOを行いました。
 Web RTC DEMO   今回の内容に関してはQiitaの方に記載しております。
よろしければそちらをご覧ください。
WebRTCの基本とP2P通信が成立するまでを学ぶ(Qiita)
また、この発表ではWeb RTCの仕組みの説明がメインになってしまったのですが、
今度はそれを使ってちょっとしたアプリを作ろうと思っています。
 次回作成したいもの   
それでは、また来週お会いしましょう！ </description>
    </item>
    
    <item>
      <title>てくてく勉強会1月19日</title>
      <link>https://persol-pt.github.io/posts/tech-workshop20180119/</link>
      <pubDate>Fri, 26 Jan 2018 12:06:17 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/tech-workshop20180119/</guid>
      <description>みなさんこんにちは、パーソルプロセスアンドテクノロジー株式会社のAS統括部、daitasuです。
今週もこの場で毎週の勉強会の様子を発信していきます！
また、再掲になりますが、技術的なブログについては今後Qiitaの方に移行することになりました。
テクテクチームのメンバーが各々に書き進めていますのでこちらもぜひご覧ください。
Qiita - パーソルプロセス&amp;amp;テクノロジー

さて、今週の発表者は定期的に個人開発をしていらっしゃるN.yamamotoさん。
テーマは 「年末年始で買ったものと最近の個人開発アプリについて」 でした。
2018年1月22日の勉強会　 テーマ「年末年始で買ったものと最近の個人開発アプリについて」 
  
最近スマートスピーカーが話題となり、Google Home、Amazon Echo、LINE Clovaなど
色んな製品が話題に上がっています。
今回は最近いろんなガジェットを購入し試しているN.yamamotoさんが
最近買ったものの紹介と、その活用法などをご紹介してくださりました。
N.yamamotoさんが最近買ったものは
 Apple Watch3(GPS)
 Kindle Fire HD 10タブレット Amazon Echo スマートリモコン  
N.yamamotoさんの家は今までApple製品に覆われていたそうですが、
最近はAmazon製品に家野中が浸食されつつあるそうです。
APP WATCH3(GPS) 
ランニングが趣味のN.yamamotoさんは
月によっては100km近く、アスリートばりに走っています。
そんなランニング好きにおすすめのAPPLE WATCH3。
NIKE + RunClub というアプリを使って走っているそうです。
こちらは1kmごとに平均タイムを記録してくれ、
信号で止まるとワークアウトを中断してくれるという優れもの。
腕時計なら邪魔にもならず、Bluetoothヘッドフォンもあれば、
音楽を聴きつつ優雅に走れます。
ランニングが趣味の方はぜひぜひ購入を検討してみてくださいね。
KINDLE FIRE HD 10 タブレット 
  
なんとこちらのタブレット、Amazonプライムで19,000円というお得価格から</description>
    </item>
    
    <item>
      <title>てくてく勉強会1月10日年初め</title>
      <link>https://persol-pt.github.io/posts/tech-workshop20180110/</link>
      <pubDate>Fri, 12 Jan 2018 17:38:09 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/tech-workshop20180110/</guid>
      <description>あけましておめでとうございます!!
本年もどうぞよろしくお願い致します。

  
今年も毎週の勉強会の様子や会社の取り組みなどをこちらのブログで発信していきます。
お時間がある際にぜひのぞいてみてください。
また、技術的なブログについては今後Qiitaの方に移行することになりました。
テクテクチームのメンバーが各々に書き進めていますのでこちらもぜひご覧ください。
Qiita - パーソルプロセス&amp;amp;テクノロジー

今週の発表者は川崎さん。
テーマは 「最近のJavascriptフレームワーク選定について」 でした。
2018年1月22日の勉強会　テーマ「最近のJavascriptフレームワーク選定について」 
  
Javascriptフレームワークといえば、その流行の移り変わりが早いことで有名ですが、
今回はそんなフロントエンドのフレームワーク選定で何を選んだらよいのか、
人気のReact、Angular、Vue.jsの3つの比較を紹介くださりました。
  

今回のお話では、技術選定時に意識することとして以下のような点を述べられていました。
 どんなものを作るのか
 出来上がるコードの品質
・可読性
・拡張性
 開発体制
・開発期間
・開発・運用人数
・採用・新メンバーの参入障壁
 公式ドキュメントの充実度
  
結論
 
それぞれのフレームワークで向いているシステムは以下のようにまとめられます。

  
AngularはReactやVue.jsとは異なり、開発に必要な機能をひとしきり揃えているため、
自分でそろえる負担が少ない一方、自由度は下がる印象です。
逆にReactは基本的にViewを作成するためのライブラリなので、
自身でほかのライブラリと組み合わせていく必要がありますが自由度は高めでUI作成は得意です。
またReactはJSXで書かれるというのも特徴ですね。
学習コストとしてはAngularが一番高く、React、VueJSの順に下がっていくようです。
ReactやVueJSは自身でライブラリを追加していかなければなりませんが、
CLIもあるのでそういった負担の差は最近だいぶ減ってきているみたいですね。
いずれにしても、合う合わないはいろんな観点から考える必要がありそうなので、
ある程度触れてみてからの検証が必要そうです。
まだまだフロントエンド界隈は終わりなき戦いが続くのでしょうか?
日々流行にアンテナを張り続けていかなければなりませんね。
それでは、今週はここまで。</description>
    </item>
    
    <item>
      <title>てくてく勉強会12月22日</title>
      <link>https://persol-pt.github.io/posts/tech-workshop1222/</link>
      <pubDate>Fri, 29 Dec 2017 23:58:18 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/tech-workshop1222/</guid>
      <description>皆さんこんにちは、新卒の藤井大祐(daitasu)です。

今週も私たちパーソルプロセスアンドテクノロジーのテクテクチームが
行っている技術勉強会のレポートをしていきたいと思います。
今年の勉強会ブログはこれで最後になります。
今週の発表者は定期的に自身でパッケージを作成し、OSSに貢献しているnissyさん。
テーマは 「http request multiplexer と文字列マッチング」 でした。
12月22日の勉強会　テーマ「http request multiplexer と文字列マッチング」 
  
通常URLにリクエストする際、そのURL文字列にマッチするパターンを
登録されているパターンの中から検索し、呼び出されるハンドラを決めようとします。
このルーティング処理はその言語やフレームワークでの処理方法によって
大きく処理速度が異なります。
今回nissyさんは基数木(パトリシア木)という集合データ構造を用いて
Go言語でルーティング処理を行うパッケージを作成しました。
Bon(https://github.com/nissy/bon)

今回のお話では、
基本的なマッチングパターンのルールから
トライ木(Trie)による複数パターンマッチング や KMP といった
代表的な文字列パターンマッチングのアルゴリズム紹介
に始まり、

いくつかの代表的なアルゴリズムの速度比較を行いまいした。
以下はパトリシア木(Patricia Trie)の構造紹介とその速度表です。

Patricia Trie(https://github.com/nissy/mux/tree/patricia)

  Patricia Trieの構造     Patricia Trie 速度   
そしてその後、実際に自身がPatricia Trieをもとにチューニングし、
Go言語で作成したルーティング手法のパッケージ「 Bon 」についての紹介を行い、
他のGo言語フレームワークとの速度比較を行いました。

  Bon 比較     BonとGo言語フレームワークの速度比較</description>
    </item>
    
    <item>
      <title>てくてく勉強会12月15日</title>
      <link>https://persol-pt.github.io/posts/tech-workshop1215/</link>
      <pubDate>Fri, 22 Dec 2017 02:48:09 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/tech-workshop1215/</guid>
      <description>皆さんこんにちは、新卒の藤井大祐(daitasu)です。
今週も私たちストラテジーサービス部テクノロジーサービスグループテクノロジーサービスチーム(通称テクテク)が
行っている技術勉強会のレポートをしていきたいと思います。

今週のテーマは 「YUBIKEYを用いた二要素認証」 です。
12月15日の勉強会　テーマ「YUBIKEYを用いた二要素認証」 
  
近年、セキュリティがより重視されるようになり、
二要素認証という言葉を聞くことが増えてきました。

一般的には、認証というと
 「ID」 + 「パスワード」
という、IDに対応した1要素での認証が標準です。
しかし、これに＋して、
  ・本人の生体情報 (顔認証、指紋認証、網膜スキャン等)
・本人だけが所有するもの (スマホやPCなどのハードウェアトークン、メールで届くワンタイムパスワード)
などを用いてもう一つ認証を増やすのが2要素認証になります。
今週の発表では、上記の 本人が所有するもの として YUBIKEY という
認証デバイスを用いた二要素認証の説明がありました。
 YUBIKEYの機能一覧   
こちらはPCに直接差して、デバイスの真ん中にあるボタンを押すだけで
二要素認証ができるというシンプルな仕組みになっています。
YUBIKEYには多くの機能が含まれているのですが、
今回は、 Yubico OTP 、 FIDO U2F に焦点を当てたお話でした。
この記事ではFIDOの内容に少しだけ触れていきたいと思います。
FIDO U2F(Fast Identity Online Universal 2nd Factor) 
この機能は自前のサービス、及びGoogle、Facebook、Dropbox、Github、GitLabなどの
各種WEBサービスにおいて、
U2Fデバイスを登録し、チャレンジレスポンス認証を利用可能にします。
チャレンジレスポンス方式の認証というのは、「認証される側」と「認証する側」の間のやり取りを
 「認証をする側」が「認証される側」に チャレンジ（ランダムな数字） を発行
 「認証される側」は チャレンジを秘密の鍵 で署名</description>
    </item>
    
    <item>
      <title>We Are JavaScripters!で弟のふんどしで相撲をとってきました</title>
      <link>https://persol-pt.github.io/posts/wejs14/</link>
      <pubDate>Thu, 21 Dec 2017 23:59:59 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/wejs14/</guid>
      <description>JavaScript Advent Calendar 2017 21 日目の記事です。

本日はWe Are JavaScripters! @14th【初心者歓迎 LT 大会】で LT してきました。
私の大好きなコミュニティで、よく参加させていただいてます。

私のチームでは React, Flow, Jest など、Facebook 製品をよく使っておりますので Facebook のフロントエンド開発スタイルについて発表してきました。

  ご覧いただいてわかったと思いますが、
今回、ただ弟の知識だけを書いたあげく、最終的に弟を前に出してインタビューするだけという非常にエコな資料を作りまして、

「お前いらなかったじゃねーかよ！」「弟の肩にのっかりすぎだろ！」「帰れ！」など、とても反響が大きく、

私はとても気持ちがよかったです。

ちなみに Facebook には訪問した方々が落書きをする THE FACEBOOK WALL がありますが、
私も先日に遊びに行ったとき落書きさせてもらいました。どこかわかりますか？（どうでもいいですよね）
 左下でした！
 会社名ではなく、自分の名前を書く、自分中心の男、それが私です。
ちなみにシアトルの風景画は別の方が描いた絵ですが、おかげさまでただの YAMAMOTO がオシャレな YAMAMOTO になりました。

WeJS の他の方の資料はもっと魅力的ですので、ぜひご覧ください
   jquery? state管理? どっち使えばいいの？ 20171221 we are_javascripters@14th  from 将一 深見</description>
    </item>
    
    <item>
      <title>てくてく勉強会12月6日</title>
      <link>https://persol-pt.github.io/posts/tech-workshop1206/</link>
      <pubDate>Fri, 08 Dec 2017 18:48:09 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/tech-workshop1206/</guid>
      <description>皆さんこんにちは、2017年入社の藤井です。
今回のブログでは弊社の私たちストラテジーサービス部テクノロジーサービスグループテクノロジーサービスチーム(通称テクテク)が
毎週行っている技術勉強会について新人目線で触れていきたいと思います。

テクテクでは毎週水曜日に技術勉強会を行っています。
この勉強会では、それぞれ自分が学びたいテーマを宣言し、1人ずつリレー形式で発表を行っています。
テクテクは現在13名のため、2か月に1回のペースで自分の発表が回ってくるイメージですね。

テーマはサーバーレスアーキテクチャ、機械学習、ブロックチェーンのようなニッチな技術領域のものであったり、
Vue.jsやKotlin、XamarinやGCPなど言語やクラウドを学んで何かアプリを作成してくるなど人によって様々です。

では、実際に勉強会をレポートしていきましょう！
12月6日の勉強会　テーマ「フロントエンドにおけるIaCとCI」 
  2017年12月6日の勉強会-1   
これは12月6日に行われた勉強会の写真です。

今回の発表者は外部のフロントエンド関連の勉強会で多く発表されている山本さん。

今回のお話は「フロントエンドにおけるIaCとCI」についてでした

IaC (Infrastructure as Code) ということで、
 なぜITインフラの構成をコード化すべきなのか IaCの実際の使用方法
  など基本的なところから、
 IoCで作成したテンプレートのプロビジョニングの自動化(CI)について
 利用するCIツールのそれぞれの区分けや比較
 実際に行ったCUIでのCIツールでの管理の具体的な構成や手順
  などをお話頂きました。

  2017年12月6日の勉強会-2   
発表の詳しい内容はこちらをご覧ください！！↓↓↓

フロントエンドのIaCとCIとLoC

OpenAPIでAPI GatewayのモックAPIを作り、コード不要のAPIテストツールDreddでテスト

インフラ基盤のコード化、ビルドやテストの自動化は
開発の効率化・省力化にもつながりますし、
コード管理できればメンテナンスが属人化されることも防げます。

いいことずくめですね。

ぜひIoCとCIで安全・スマート・モテル駆動開発を！</description>
    </item>
    
  </channel>
</rss>