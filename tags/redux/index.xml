<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redux on PPT Developers&#39; Blog</title>
    <link>https://persol-pt.github.io/tags/redux/</link>
    <description>Recent content in Redux on PPT Developers&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Thu, 08 Mar 2018 11:40:24 +0900</lastBuildDate>
    
	<atom:link href="https://persol-pt.github.io/tags/redux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>てくてく勉強会2月22日</title>
      <link>https://persol-pt.github.io/posts/tech-workshop20180222/</link>
      <pubDate>Thu, 08 Mar 2018 11:40:24 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/tech-workshop20180222/</guid>
      <description>みなさんこんにちは、
パーソルプロセスアンドテクノロジー株式会社のAS統括部、daitasuです。
今回も毎週の勉強会の様子を発信していきます！
※技術的なブログについては現在Qiitaの方に移行致しました。
テクテクチームのメンバーが各々に書き進めていますのでこちらもぜひご覧ください。
Qiita - パーソルプロセス&amp;amp;テクノロジー
さて、今週の発表者は萩原さん。
テーマは 「ReactとRedux」 でした。
2018年2月22日の勉強会　 テーマ「ReactとRedux」 
  以前の勉強会では、Vue.jsとAngular、Reactの比較が行われましたが、
今回萩原さんが説明したのは、ReactにおけるReduxの話でした。
React.js 
  
そもそもReactとは何かのおさらいです。
ReactはJavascriptのライブラリであり、
JSX形式でJS内にHTMLタグを埋め込むような形で書いていきます。
通常のJSですと、HTMLの中にJavascriptを書いていきますよね？
あくまでもメインがHTMLであった今までの文化から、
JSにより重要性を持たせてきた近代。
JSが主体となるという点で個人的にはReactはなにかと近代感を感じます。
また、component思考やstateによる状態管理も他とは思想が違う部分です。
さて、Reactの話が上がるとよく出てくるものとして、
 Redux webpack babel npm/yarn  
などが上がるかと思います。
今回はReduxにフォーカスを当てたお話でした。
FluxとRedux 
Reduxとは？
Reactが扱うstateを一元管理するためのフレームワークです。
ReduxはFluxというデザインパターンの思想を引き継いでいます。
Fluxとは？
facebookが提唱したアーキテクチャです。
 Action　View等から発火されるイベント。 Dispatcher　アクションを受けて、全てのstoreに対しアクションを受け渡す。 Store　アプリケーションのデータ。アクションによってのみデータ更新される。 View　storeのデータをもとに表示するコンポーネント。  という4つのパートから組み立てられています。
Flux参考
特徴
 データの流れが一方通行 全てのデータのオペレーションがDispatcherに集約される</description>
    </item>
    
  </channel>
</rss>