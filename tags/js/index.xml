<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Js on PPT Developers&#39; Blog</title>
    <link>https://persol-pt.github.io/tags/js/</link>
    <description>Recent content in Js on PPT Developers&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Tue, 27 Mar 2018 17:21:16 +0900</lastBuildDate>
    
	<atom:link href="https://persol-pt.github.io/tags/js/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>勉強会[Learning Elm in JS]</title>
      <link>https://persol-pt.github.io/posts/tech-workshop20180322/</link>
      <pubDate>Tue, 27 Mar 2018 17:21:16 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/tech-workshop20180322/</guid>
      <description>みなさんこんにちは、
パーソルプロセスアンドテクノロジー株式会社のAS統括部、daitasuです。
今週も私たちの部の勉強会の様子をお送りいたします。
※技術的なブログについては現在Qiitaの方に移行致しました。
テクテクチームのメンバーが各々に書き進めていますのでこちらもぜひご覧ください。
Qiita - パーソルプロセス&amp;amp;テクノロジー
さて、今週の発表者は現在1週間でLT発表4回という
講演家のようなライフに挑戦中のboiyaaさん。
テーマは「Learning Elm in JS」でした。
2018年3月22日の勉強会　 テーマ「Learning Elm in JS」   
boiyaaさんは、昨年関数型言語であるElmの魅力にはまり、
今では色々なコミュニティで、フロントエンドについての話題を中心に、
Elmについてもよく発表を行っています。

Elmとは 
静的かつ強力な型検査によって、 鉄壁のように実行時例外を起こさないことが強みの関数型言語です。
ElmはHaskellをベースとして作られており、
状態や変数はありません。全ては関数によってできています。

さて、関数型言語といわれると、なじみのない人からすると
体が拒否反応を示します。
私も以前boiyaaさんに誘われてElmハンズオンに参加したことがあるのですが、
何が起きているか分からず思考が停止しました。
しかし今回、そんなElmになじみのない人に向けて、
Elmは何がいいのか、他のAltJSと何が違うのか
素のjavascriptと同じコードをElmで書いて比較することで
その良し悪しを分かりやすく伝えてくれました。
こちらがそのスライドになります。
Learning Elm in JS 

JSでのぼこぼこ続出する実行時例外達が「事実上、一切起こらない」というのは
非常にありがたいですね。
この堅牢性は学習の価値あり！
皆さんもスライドを読んで教務が湧いたら、ぜひぜひElmを使ってみてください。</description>
    </item>
    
  </channel>
</rss>