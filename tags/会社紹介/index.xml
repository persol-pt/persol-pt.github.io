<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>会社紹介 on PPT Developers&#39; Blog</title>
    <link>https://persol-pt.github.io/tags/%E4%BC%9A%E7%A4%BE%E7%B4%B9%E4%BB%8B/</link>
    <description>Recent content in 会社紹介 on PPT Developers&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Tue, 27 Feb 2018 17:39:29 +0900</lastBuildDate>
    
	<atom:link href="https://persol-pt.github.io/tags/%E4%BC%9A%E7%A4%BE%E7%B4%B9%E4%BB%8B/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>てくてく勉強会2月15日</title>
      <link>https://persol-pt.github.io/posts/tech-workshop20180215/</link>
      <pubDate>Tue, 27 Feb 2018 17:39:29 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/tech-workshop20180215/</guid>
      <description>みなさんこんにちは、パーソルプロセスアンドテクノロジー株式会社のAS統括部、daitasuです。
今回も毎週の勉強会の様子を発信していきます！
※技術的なブログについては現在Qiitaの方に移行致しました。
テクテクチームのメンバーが各々に書き進めていますのでこちらもぜひご覧ください。
Qiita - パーソルプロセス&amp;amp;テクノロジー

さて、今週の発表者はテクテクチームの生みの親ともいえる関根さん。
テーマは 「コインチェック事件を調べる」 でした。
2018年2月15日の勉強会　 テーマ「コインチェック事件を調べる」 
  
2018年、年明け早々から世間を賑わせたこの話題、
皆さんもニュース等で一度は見たことがあるかと思います。
今回のお話では、
関根さんがコインチェック事件の勘所を調べて共有して頂きました。
コインチェック事件の成り行き 
  
上記にコインチェック事件が起こってから最近までの
事件の流れがまとめられています。
何百億という莫大な補償が本当に可能かどうかは定かではありませんが、
額といい規模といい、前代未聞のハッキング事件といっていいでしょう。
今回のお話では、特に今回の事件に関しての
セキュリティ面の話が中心でした。
 
中心となるのは、以下の二つの点。
 コールドウォレットではなく、ホットウォレットで管理 マルチシグではなく、シングルシグで管理  
コールドウォレットとホットウォレット 
ホットウォレット
ホットウォレットというのは、常時ネットワークに接続された環境にあるウォレットのことです。
コールドウォレット
一方、コールドウォレットというのは、秘密鍵をオフラインで管理するタイプの仮想通貨ウォレットです。
鍵を物理的なもの(ペーパーウォレット等)にしておくことや、特殊なハードウェアでのみ分かるようにしておく
といった鍵の管理方式になります。
コールドウォレットにして、鍵を紙などに物理的に管理しておけば、
確かにハッカーからWEB上から盗まれる心配はありませんね。
シングルシグとマルチシグ もう一つの重要な点は、シングルシグとマルチシグです。
ビットコインなど、仮想通貨の送付には「公開鍵暗号方式」が用いられており、
公開鍵と秘密鍵がセットになっていないと情報の取得ができないようになっています。
シングルシグとマルチシグはその公開鍵暗号方式の管理方法の種類です。
シングルシグ
公開鍵=1、秘密鍵=1で管理しています。
マルチシグ
鍵を開けるために複数の秘密鍵が必要になります。
マルチシグの一例：(2 of 3)
この方式では、3つの秘密鍵が存在し、そのうち2つの鍵を用いて複合します。
マルチシグで管理し、鍵を別々に保管しておけばより強固なセキュリティを
実現できるというわけですね。
各取引所のセキュリティ比較</description>
    </item>
    
    <item>
      <title>てくてく勉強会2月8日</title>
      <link>https://persol-pt.github.io/posts/tech-workshop20180208/</link>
      <pubDate>Sat, 10 Feb 2018 11:37:32 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/tech-workshop20180208/</guid>
      <description>みなさんこんにちは、パーソルプロセスアンドテクノロジー株式会社のAS統括部、daitasuです。
今回も毎週の勉強会の様子を発信していきます！
また、技術的なブログについては現在Qiitaの方に移行しております。
テクテクチームのメンバーが各々に書き進めていますのでこちらもぜひご覧ください。
Qiita - パーソルプロセス&amp;amp;テクノロジー

さて、今週の発表者はサーバエンジニアであるビトルさん。
テーマは 「GraphQL入門」 でした。
2018年2月8日の勉強会　 テーマ「GraphQL入門」 
  
今回のお話では、ここ数年話題に上がっていたFacebookによって開発された
クエリ言語、「GraphQL」をご紹介いただきました。
GraphQLはよくRESTfulと比較されることが良くありますが、
そういった話も織り交ぜながら、今回は実際にビトルさんが触ってみて感じたこと、
利点や課題点についての説明でした。
GraphQLの特徴  APIの定義にあたるのがSchema クエリ言語なので対象のDBなどのデータストレージは何でもいい バージョンレスAPI 多数のプログラミング言語で利用できる  特徴としては、上記のようなお話がありました。
ここからは実際の処理を見ていきます。
GraphQLの処理 
  
GraphQLでは上記のようにSchemaを定義していきます。
例では、Shopというオブジェクト型を定義し、
idとnameフィールドを定義しています。
GraphQLはこのように、Schemaの存在と問い合わせ言語仕様がセットになっており、
型システムに基づいたAPIの構築ができます。
上記の例のように、ID型は一意性を保証します。
また、Not Nullは!で示すそうです。
次に、検索クエリです。
こちらはSchemaの中にQuery型として定義するそうです。
は以下のように示すそうです。
schema { type shop{ id: ID! name: String! } type Query { shops: [Shop]! shop(name: String): Shop } }  このように引数付きのフィールドを定義することで、</description>
    </item>
    
    <item>
      <title>てくてく勉強会1月24日</title>
      <link>https://persol-pt.github.io/posts/tech-workshop20180131/</link>
      <pubDate>Wed, 31 Jan 2018 13:38:55 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/tech-workshop20180131/</guid>
      <description> 
みなさんこんにちは、パーソルプロセスアンドテクノロジー株式会社のAS統括部、daitasuです。
今週も私たち、テクテクチームの毎週の勉強会の様子を発信していきます！
技術的なブログについては現在QiitaのOrganizationに移行しております。
テクテクチームのメンバーが各々に書き進めていますのでこちらもぜひご覧ください。
Qiita - パーソルプロセス&amp;amp;テクノロジー

さて、今週の発表者は毎週このブログをお届けしております、私、藤井 大祐(daitasu)です。
テーマは 「WebRTCコトハジメ」 。
Web RTCを始めるにあたっての基礎知識・導入を発表しました。 2018年1月22日の勉強会　 テーマ「Web RTC コトハジメ」 
  
本発表では、Web RTCの基本的な内容について、
実際にP2P通信を行うまでについての説明と実際のDEMOを行いました。
 Web RTC DEMO   今回の内容に関してはQiitaの方に記載しております。
よろしければそちらをご覧ください。
WebRTCの基本とP2P通信が成立するまでを学ぶ(Qiita)
また、この発表ではWeb RTCの仕組みの説明がメインになってしまったのですが、
今度はそれを使ってちょっとしたアプリを作ろうと思っています。
 次回作成したいもの   
それでは、また来週お会いしましょう！ </description>
    </item>
    
    <item>
      <title>てくてく勉強会1月19日</title>
      <link>https://persol-pt.github.io/posts/tech-workshop20180119/</link>
      <pubDate>Fri, 26 Jan 2018 12:06:17 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/tech-workshop20180119/</guid>
      <description>みなさんこんにちは、パーソルプロセスアンドテクノロジー株式会社のAS統括部、daitasuです。
今週もこの場で毎週の勉強会の様子を発信していきます！
また、再掲になりますが、技術的なブログについては今後Qiitaの方に移行することになりました。
テクテクチームのメンバーが各々に書き進めていますのでこちらもぜひご覧ください。
Qiita - パーソルプロセス&amp;amp;テクノロジー

さて、今週の発表者は定期的に個人開発をしていらっしゃるN.yamamotoさん。
テーマは 「年末年始で買ったものと最近の個人開発アプリについて」 でした。
2018年1月22日の勉強会　 テーマ「年末年始で買ったものと最近の個人開発アプリについて」 
  
最近スマートスピーカーが話題となり、Google Home、Amazon Echo、LINE Clovaなど
色んな製品が話題に上がっています。
今回は最近いろんなガジェットを購入し試しているN.yamamotoさんが
最近買ったものの紹介と、その活用法などをご紹介してくださりました。
N.yamamotoさんが最近買ったものは
 Apple Watch3(GPS)
 Kindle Fire HD 10タブレット Amazon Echo スマートリモコン  
N.yamamotoさんの家は今までApple製品に覆われていたそうですが、
最近はAmazon製品に家野中が浸食されつつあるそうです。
APP WATCH3(GPS) 
ランニングが趣味のN.yamamotoさんは
月によっては100km近く、アスリートばりに走っています。
そんなランニング好きにおすすめのAPPLE WATCH3。
NIKE + RunClub というアプリを使って走っているそうです。
こちらは1kmごとに平均タイムを記録してくれ、
信号で止まるとワークアウトを中断してくれるという優れもの。
腕時計なら邪魔にもならず、Bluetoothヘッドフォンもあれば、
音楽を聴きつつ優雅に走れます。
ランニングが趣味の方はぜひぜひ購入を検討してみてくださいね。
KINDLE FIRE HD 10 タブレット 
  
なんとこちらのタブレット、Amazonプライムで19,000円というお得価格から</description>
    </item>
    
    <item>
      <title>てくてく勉強会1月10日年初め</title>
      <link>https://persol-pt.github.io/posts/tech-workshop20180110/</link>
      <pubDate>Fri, 12 Jan 2018 17:38:09 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/tech-workshop20180110/</guid>
      <description>あけましておめでとうございます!!
本年もどうぞよろしくお願い致します。

  
今年も毎週の勉強会の様子や会社の取り組みなどをこちらのブログで発信していきます。
お時間がある際にぜひのぞいてみてください。
また、技術的なブログについては今後Qiitaの方に移行することになりました。
テクテクチームのメンバーが各々に書き進めていますのでこちらもぜひご覧ください。
Qiita - パーソルプロセス&amp;amp;テクノロジー

今週の発表者は川崎さん。
テーマは 「最近のJavascriptフレームワーク選定について」 でした。
2018年1月22日の勉強会　テーマ「最近のJavascriptフレームワーク選定について」 
  
Javascriptフレームワークといえば、その流行の移り変わりが早いことで有名ですが、
今回はそんなフロントエンドのフレームワーク選定で何を選んだらよいのか、
人気のReact、Angular、Vue.jsの3つの比較を紹介くださりました。
  

今回のお話では、技術選定時に意識することとして以下のような点を述べられていました。
 どんなものを作るのか
 出来上がるコードの品質
・可読性
・拡張性
 開発体制
・開発期間
・開発・運用人数
・採用・新メンバーの参入障壁
 公式ドキュメントの充実度
  
結論
 
それぞれのフレームワークで向いているシステムは以下のようにまとめられます。

  
AngularはReactやVue.jsとは異なり、開発に必要な機能をひとしきり揃えているため、
自分でそろえる負担が少ない一方、自由度は下がる印象です。
逆にReactは基本的にViewを作成するためのライブラリなので、
自身でほかのライブラリと組み合わせていく必要がありますが自由度は高めでUI作成は得意です。
またReactはJSXで書かれるというのも特徴ですね。
学習コストとしてはAngularが一番高く、React、VueJSの順に下がっていくようです。
ReactやVueJSは自身でライブラリを追加していかなければなりませんが、
CLIもあるのでそういった負担の差は最近だいぶ減ってきているみたいですね。
いずれにしても、合う合わないはいろんな観点から考える必要がありそうなので、
ある程度触れてみてからの検証が必要そうです。
まだまだフロントエンド界隈は終わりなき戦いが続くのでしょうか?
日々流行にアンテナを張り続けていかなければなりませんね。
それでは、今週はここまで。</description>
    </item>
    
    <item>
      <title>仕事納め2017</title>
      <link>https://persol-pt.github.io/posts/osame17/</link>
      <pubDate>Sat, 30 Dec 2017 19:47:43 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/osame17/</guid>
      <description>一昨日は、飲みたい気分だったので、仕事納めにも関わらず何も予定が無い寂しい人たちで吉野家で盛大に忘年会しました！！
 
なんと3人で3,000円でお釣りがくるというエコノミクス
 
今年は個人的には割と技術キャッチアップや挑戦に割ける機会と時間があって、ReduxやElmなどで関数型パラダイム、CQRSやESなどリアクティブシステム向きのアーキテクチャ、Terraformなどによるパブリッククラウドの構成管理、に足を踏み入れたりして、また技術以外にもチームを運用する経験ができたりして、会社には文句ばっかり言っていましたが、振り返ってみれば割と充実した１年だったかもしれません。

来年は、エンジニアとしては久々に本番運用を経験したいですね。チーム運用としては、グループビジョンの「人と組織の成長創造インフラへ」を体現できるようなチームを作るために、文化・制度・採用を関連部署と連携して挑戦していきたいと思っています。

ということで、来年もよろしくお願いします
良いお年を〜</description>
    </item>
    
    <item>
      <title>てくてく勉強会12月22日</title>
      <link>https://persol-pt.github.io/posts/tech-workshop1222/</link>
      <pubDate>Fri, 29 Dec 2017 23:58:18 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/tech-workshop1222/</guid>
      <description>皆さんこんにちは、新卒の藤井大祐(daitasu)です。

今週も私たちパーソルプロセスアンドテクノロジーのテクテクチームが
行っている技術勉強会のレポートをしていきたいと思います。
今年の勉強会ブログはこれで最後になります。
今週の発表者は定期的に自身でパッケージを作成し、OSSに貢献しているnissyさん。
テーマは 「http request multiplexer と文字列マッチング」 でした。
12月22日の勉強会　テーマ「http request multiplexer と文字列マッチング」 
  
通常URLにリクエストする際、そのURL文字列にマッチするパターンを
登録されているパターンの中から検索し、呼び出されるハンドラを決めようとします。
このルーティング処理はその言語やフレームワークでの処理方法によって
大きく処理速度が異なります。
今回nissyさんは基数木(パトリシア木)という集合データ構造を用いて
Go言語でルーティング処理を行うパッケージを作成しました。
Bon(https://github.com/nissy/bon)

今回のお話では、
基本的なマッチングパターンのルールから
トライ木(Trie)による複数パターンマッチング や KMP といった
代表的な文字列パターンマッチングのアルゴリズム紹介
に始まり、

いくつかの代表的なアルゴリズムの速度比較を行いまいした。
以下はパトリシア木(Patricia Trie)の構造紹介とその速度表です。

Patricia Trie(https://github.com/nissy/mux/tree/patricia)

  Patricia Trieの構造     Patricia Trie 速度   
そしてその後、実際に自身がPatricia Trieをもとにチューニングし、
Go言語で作成したルーティング手法のパッケージ「 Bon 」についての紹介を行い、
他のGo言語フレームワークとの速度比較を行いました。

  Bon 比較     BonとGo言語フレームワークの速度比較</description>
    </item>
    
    <item>
      <title>てくてく勉強会12月15日</title>
      <link>https://persol-pt.github.io/posts/tech-workshop1215/</link>
      <pubDate>Fri, 22 Dec 2017 02:48:09 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/tech-workshop1215/</guid>
      <description>皆さんこんにちは、新卒の藤井大祐(daitasu)です。
今週も私たちストラテジーサービス部テクノロジーサービスグループテクノロジーサービスチーム(通称テクテク)が
行っている技術勉強会のレポートをしていきたいと思います。

今週のテーマは 「YUBIKEYを用いた二要素認証」 です。
12月15日の勉強会　テーマ「YUBIKEYを用いた二要素認証」 
  
近年、セキュリティがより重視されるようになり、
二要素認証という言葉を聞くことが増えてきました。

一般的には、認証というと
 「ID」 + 「パスワード」
という、IDに対応した1要素での認証が標準です。
しかし、これに＋して、
  ・本人の生体情報 (顔認証、指紋認証、網膜スキャン等)
・本人だけが所有するもの (スマホやPCなどのハードウェアトークン、メールで届くワンタイムパスワード)
などを用いてもう一つ認証を増やすのが2要素認証になります。
今週の発表では、上記の 本人が所有するもの として YUBIKEY という
認証デバイスを用いた二要素認証の説明がありました。
 YUBIKEYの機能一覧   
こちらはPCに直接差して、デバイスの真ん中にあるボタンを押すだけで
二要素認証ができるというシンプルな仕組みになっています。
YUBIKEYには多くの機能が含まれているのですが、
今回は、 Yubico OTP 、 FIDO U2F に焦点を当てたお話でした。
この記事ではFIDOの内容に少しだけ触れていきたいと思います。
FIDO U2F(Fast Identity Online Universal 2nd Factor) 
この機能は自前のサービス、及びGoogle、Facebook、Dropbox、Github、GitLabなどの
各種WEBサービスにおいて、
U2Fデバイスを登録し、チャレンジレスポンス認証を利用可能にします。
チャレンジレスポンス方式の認証というのは、「認証される側」と「認証する側」の間のやり取りを
 「認証をする側」が「認証される側」に チャレンジ（ランダムな数字） を発行
 「認証される側」は チャレンジを秘密の鍵 で署名</description>
    </item>
    
    <item>
      <title>てくてく勉強会12月6日</title>
      <link>https://persol-pt.github.io/posts/tech-workshop1206/</link>
      <pubDate>Fri, 08 Dec 2017 18:48:09 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/tech-workshop1206/</guid>
      <description>皆さんこんにちは、2017年入社の藤井です。
今回のブログでは弊社の私たちストラテジーサービス部テクノロジーサービスグループテクノロジーサービスチーム(通称テクテク)が
毎週行っている技術勉強会について新人目線で触れていきたいと思います。

テクテクでは毎週水曜日に技術勉強会を行っています。
この勉強会では、それぞれ自分が学びたいテーマを宣言し、1人ずつリレー形式で発表を行っています。
テクテクは現在13名のため、2か月に1回のペースで自分の発表が回ってくるイメージですね。

テーマはサーバーレスアーキテクチャ、機械学習、ブロックチェーンのようなニッチな技術領域のものであったり、
Vue.jsやKotlin、XamarinやGCPなど言語やクラウドを学んで何かアプリを作成してくるなど人によって様々です。

では、実際に勉強会をレポートしていきましょう！
12月6日の勉強会　テーマ「フロントエンドにおけるIaCとCI」 
  2017年12月6日の勉強会-1   
これは12月6日に行われた勉強会の写真です。

今回の発表者は外部のフロントエンド関連の勉強会で多く発表されている山本さん。

今回のお話は「フロントエンドにおけるIaCとCI」についてでした

IaC (Infrastructure as Code) ということで、
 なぜITインフラの構成をコード化すべきなのか IaCの実際の使用方法
  など基本的なところから、
 IoCで作成したテンプレートのプロビジョニングの自動化(CI)について
 利用するCIツールのそれぞれの区分けや比較
 実際に行ったCUIでのCIツールでの管理の具体的な構成や手順
  などをお話頂きました。

  2017年12月6日の勉強会-2   
発表の詳しい内容はこちらをご覧ください！！↓↓↓

フロントエンドのIaCとCIとLoC

OpenAPIでAPI GatewayのモックAPIを作り、コード不要のAPIテストツールDreddでテスト

インフラ基盤のコード化、ビルドやテストの自動化は
開発の効率化・省力化にもつながりますし、
コード管理できればメンテナンスが属人化されることも防げます。

いいことずくめですね。

ぜひIoCとCIで安全・スマート・モテル駆動開発を！</description>
    </item>
    
    <item>
      <title>社外発信はじめました</title>
      <link>https://persol-pt.github.io/posts/start-publishing/</link>
      <pubDate>Sun, 12 Nov 2017 16:13:55 +0900</pubDate>
      
      <guid>https://persol-pt.github.io/posts/start-publishing/</guid>
      <description>&lt;p&gt;はじめまして、パーソルプロセス＆テクノロジー株式会社です。みんな PPT と略してます。レガシーなパワポですね。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>